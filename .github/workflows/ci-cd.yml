# This is a basic workflow to help you get started with Actions

name: CI / CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  pull_request:
    branches: ["main"]

permissions:
  id-token: write
  contents: write

jobs:
  # This workflow contains a single job called "build"
  Deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.TOKEN_FOR_GIHUB }}

      - name: Generate Environment Variables File for Production
        run: |
          cd app
          echo "MYSQL_DATABASE=$MYSQL_DATABASE" >> .env
          echo "MYSQL_HOST=$MYSQL_HOST" >> .env
          echo "MYSQL_USER_NAME=$MYSQL_USER_NAME" >> .env
          echo "AUTH_KEY=AUTH_KEY" >> .env
          echo "SALT=$SALT" >> .env
          echo "MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD" >> .env
        env:
          MYSQL_DATABASE: ${{secrets.MYSQL_DATABASE}}
          MYSQL_HOST: ${{secrets.MYSQL_HOST}}
          MYSQL_USER_NAME: ${{secrets.MYSQL_USER_NAME}}
          AUTH_KEY: ${{secrets.AUTH_KEY}}
          SALT: ${{secrets.SALT}}
          MYSQL_ROOT_PASSWORD: ${{secrets.MYSQL_ROOT_PASSWORD}}

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.2
        with:
          node-version: "16.14.0"

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::339713114514:role/iam-role-github-oidc
          aws-region: ap-northeast-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push docker image to Amazon ECR
        env:
          REGISTRY: 339713114514.dkr.ecr.ap-northeast-2.amazonaws.com
          REPOSITORY: nsus
          IMAGE_TAG: ${{ github.run_number }}
        run: |
          cd app
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Set Tag Value
        id: set_tag
        run: |
          TAG=${{ github.run_number }}
          sed -i "s/tag: .*/tag: $TAG/" argocd/order-values.yaml
        shell: bash

      - name: Push helm repo
        run: |
          git config --global user.email "allieunbi@gmail.com"
          git config --global user.name "eunbi"
          git commit -a -m "Add changes"
          git push origin HEAD:main
