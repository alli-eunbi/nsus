# This is a basic workflow to help you get started with Actions

name: CI / CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  id-token: write
  contents: read

jobs:
  # This workflow contains a single job called "build"
  Deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.2
        with:
          node-version: "16.14.0"

      # - name: Upload a Build Artifact
      #   uses: actions/upload-artifact@v4.3.1
      #   with:
      #     # Artifact name
      #     name: app
      #     # A file, directory or wildcard pattern that describes what to upload
      #     path: ../../app

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::339713114514:role/iam-role-github-oidc
          aws-region: ap-northeast-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build and push docker image to Amazon ECR
        env:
          REGISTRY: 339713114514.dkr.ecr.ap-northeast-2.amazonaws.com/nsus
          REPOSITORY: test-api
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t --imageName=$REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Push helm repo
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          git config --global user.email "allieunbi@gmail.com"
          git config --global user.name "eunbi"

          git add demo/values.yaml demo/values-eks.yaml;
          git commit --message "Update image tag to $IMAGE_TAG";
          git config -l | grep 'http\..*\.extraheader' | cut -d= -f1 | xargs -L1 git config --unset-all
          git push -u origin main
